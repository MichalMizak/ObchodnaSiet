package sk.upjs.ics.paz1c.obchodnaSiet.forms;

import java.util.List;
import javax.swing.ComboBoxModel;
import sk.upjs.ics.paz1c.obchodnaSiet.dao.interfaces.DodavatelDao;
import sk.upjs.ics.paz1c.obchodnaSiet.dao.interfaces.ProduktDao;
import sk.upjs.ics.paz1c.obchodnaSiet.entity.Dodavatel;
import sk.upjs.ics.paz1c.obchodnaSiet.other.DaoFactory;
import sk.upjs.ics.paz1c.obchodnaSiet.entity.Produkt;
import sk.upjs.ics.paz1c.obchodnaSiet.model.DodavatelComboBoxModel;
import sk.upjs.ics.paz1c.obchodnaSiet.model.ProduktComboBoxModel;

public class ProduktForm extends javax.swing.JFrame {
    
    private boolean editMode;
    private Produkt produkt;
    private List<Produkt> produkty;
    private DodavatelDao dodavatelDao = DaoFactory.INSTANCE.getDodavatelDao();
    
    public ProduktForm(List<Produkt> produkty) {
        initComponents();
        this.setLocationRelativeTo(null);
        editMode = false;
        produkt = new Produkt();
        this.produkty = produkty;
    }
    
    public ProduktForm(List<Produkt> produkty, Produkt produkt) {
        initComponents();
        this.setLocationRelativeTo(null);
        editMode = true;
        this.produkt = produkt;
        this.produkty = produkty;
        initTextFields();
    }
    
    private void initTextFields() {
        nazovProduktuTextField.setText(produkt.getNazov());
        nakupnaCenaTextField.setText(Double.toString(produkt.getNakupnaCena()));
        predajnaCenaTextField.setText(Double.toString(produkt.getPredajnaCena()));
        Dodavatel dodavatel = dodavatelDao.getById(produkt.getDodavatel_id());
        getDodavatelComboBoxModel().setSelectedItem((dodavatel));
        pridatButton.setText("Upraviť");
    }
    
    private ComboBoxModel<Dodavatel> getDodavatelComboBoxModel() {
        return dodavatelComboBox.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nazovProduktuTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nakupnaCenaTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        predajnaCenaTextField = new javax.swing.JTextField();
        pridatButton = new javax.swing.JButton();
        spatButton = new javax.swing.JButton();
        dodavatelComboBox = new javax.swing.JComboBox<>();
        dodavatelLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pridať produkt");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Názov produktu:");

        nazovProduktuTextField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Nákupná cena:");

        nakupnaCenaTextField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        nakupnaCenaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nakupnaCenaTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Predajná cena:");

        predajnaCenaTextField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        pridatButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        pridatButton.setText("Pridať");
        pridatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pridatButtonActionPerformed(evt);
            }
        });

        spatButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        spatButton.setText("Späť");
        spatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spatButtonActionPerformed(evt);
            }
        });

        dodavatelComboBox.setModel(new DodavatelComboBoxModel());

        dodavatelLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        dodavatelLabel.setText("Dodávateľ:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pridatButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spatButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(dodavatelLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dodavatelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(nazovProduktuTextField)
                            .addComponent(nakupnaCenaTextField)
                            .addComponent(predajnaCenaTextField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nazovProduktuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nakupnaCenaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(predajnaCenaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dodavatelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dodavatelLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pridatButton)
                    .addComponent(spatButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spatButtonActionPerformed
        new ZoznamProduktyForm(produkty).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_spatButtonActionPerformed

    private void nakupnaCenaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nakupnaCenaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nakupnaCenaTextFieldActionPerformed

    private void pridatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pridatButtonActionPerformed
        // TODO add your handling code here:

        String nazov = nazovProduktuTextField.getText();
        double nakupnaCena = Double.parseDouble(nakupnaCenaTextField.getText());
        double predajnaCena = Double.parseDouble(predajnaCenaTextField.getText());
        
        produkt.setNazov(nazov);
        produkt.setNakupnaCena(nakupnaCena);
        produkt.setPredajnaCena(predajnaCena);
        produkt.setDodavatel_id(((Dodavatel) getDodavatelComboBoxModel().getSelectedItem()).getId());
        
        ProduktDao produktDao = DaoFactory.INSTANCE.getProduktDao();
        
        if (editMode) {
            produktDao.edit(produkt);
        } else {
            produkty.add(produkt);
            produktDao.save(produkt);
        }
        
        new ZoznamProduktyForm(produkty).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pridatButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Dodavatel> dodavatelComboBox;
    private javax.swing.JLabel dodavatelLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nakupnaCenaTextField;
    private javax.swing.JTextField nazovProduktuTextField;
    private javax.swing.JTextField predajnaCenaTextField;
    private javax.swing.JButton pridatButton;
    private javax.swing.JButton spatButton;
    // End of variables declaration//GEN-END:variables

}
