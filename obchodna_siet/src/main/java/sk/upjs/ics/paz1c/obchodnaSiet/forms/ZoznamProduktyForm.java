package sk.upjs.ics.paz1c.obchodnaSiet.forms;

import java.util.List;
import javax.swing.JOptionPane;
import sk.upjs.ics.paz1c.obchodnaSiet.dao.interfaces.ProduktDao;
import sk.upjs.ics.paz1c.obchodnaSiet.entity.Prevadzka;
import sk.upjs.ics.paz1c.obchodnaSiet.entity.Produkt;
import sk.upjs.ics.paz1c.obchodnaSiet.model.ProduktListModel;
import sk.upjs.ics.paz1c.obchodnaSiet.model.ProduktTableModel;
import sk.upjs.ics.paz1c.obchodnaSiet.other.DaoFactory;

public class ZoznamProduktyForm extends javax.swing.JFrame {

    private static final String OZNACTE_PRODUKT_MESSAGE = "Označte produkt";

    private List<Produkt> produkty;
    private ProduktDao produktDao = DaoFactory.INSTANCE.getProduktDao();
    
    public ZoznamProduktyForm(List<Produkt> produkty) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.produkty = produkty;
        refreshProduktModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        moznostiZobrazeniaButtonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        pridatProduktNaPredajnuButton = new javax.swing.JButton();
        pridatProduktButton = new javax.swing.JButton();
        spatButton = new javax.swing.JButton();
        odobratProduktButton = new javax.swing.JButton();
        upravitProduktButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        produktTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Produkty");

        pridatProduktNaPredajnuButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        pridatProduktNaPredajnuButton.setText("Pridať produkt na prevádzku");
        pridatProduktNaPredajnuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pridatProduktNaPredajnuButtonActionPerformed(evt);
            }
        });

        pridatProduktButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        pridatProduktButton.setText("Pridať produkt");
        pridatProduktButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pridatProduktButtonActionPerformed(evt);
            }
        });

        spatButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        spatButton.setText("Späť");
        spatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spatButtonActionPerformed(evt);
            }
        });

        odobratProduktButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        odobratProduktButton.setText("Odobrať produkt");
        odobratProduktButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                odobratProduktButtonActionPerformed(evt);
            }
        });

        upravitProduktButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        upravitProduktButton.setText("Upraviť produkt");
        upravitProduktButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upravitProduktButtonActionPerformed(evt);
            }
        });

        produktTable.setModel(new ProduktTableModel(produkty));
        jScrollPane2.setViewportView(produktTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pridatProduktButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(odobratProduktButton, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(upravitProduktButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(pridatProduktNaPredajnuButton, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pridatProduktButton)
                    .addComponent(pridatProduktNaPredajnuButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spatButton)
                    .addComponent(odobratProduktButton)
                    .addComponent(upravitProduktButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spatButtonActionPerformed
        new HlavneOknoForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_spatButtonActionPerformed

    private void pridatProduktButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pridatProduktButtonActionPerformed
        new ProduktForm(produkty).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pridatProduktButtonActionPerformed

    private void odobratProduktButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_odobratProduktButtonActionPerformed
        Produkt produkt = getSelectedProdukt();
        if (produkt == null) {
            JOptionPane.showMessageDialog(this, OZNACTE_PRODUKT_MESSAGE);
            return;
        }
        //new OdobratProduktDialogForm(this, true, produkt).setVisible(true);
        produktDao.delete(produkt.getId());
        produkty = produktDao.getProdukty();
        
        refreshProduktModel();
    }//GEN-LAST:event_odobratProduktButtonActionPerformed

    private void pridatProduktNaPredajnuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pridatProduktNaPredajnuButtonActionPerformed
        new PridatProduktNaPrevadzkuForm(produkty).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_pridatProduktNaPredajnuButtonActionPerformed

    private void upravitProduktButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upravitProduktButtonActionPerformed
        Produkt produkt = getSelectedProdukt();
        if (produkt == null) {
            JOptionPane.showMessageDialog(this, OZNACTE_PRODUKT_MESSAGE);
            return;
        }
        new ProduktForm(produkty, produkt).setVisible(true);
        dispose();
    }//GEN-LAST:event_upravitProduktButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.ButtonGroup moznostiZobrazeniaButtonGroup;
    private javax.swing.JButton odobratProduktButton;
    private javax.swing.JButton pridatProduktButton;
    private javax.swing.JButton pridatProduktNaPredajnuButton;
    private javax.swing.JTable produktTable;
    private javax.swing.JButton spatButton;
    private javax.swing.JButton upravitProduktButton;
    // End of variables declaration//GEN-END:variables

    private Produkt getSelectedProdukt() {
        int selectedRow = produktTable.getSelectedRow();
        if (selectedRow == -1) {
            return null;
        } else {
            return getProduktTableModel().getItemAt(selectedRow);
        }
    }

    private void refreshProduktModel() {
        ProduktTableModel model = getProduktTableModel();
        model.refresh(produkty);
    }
    

    private ProduktTableModel getProduktTableModel() {
        return (ProduktTableModel) produktTable.getModel();
    }
}
